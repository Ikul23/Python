# # # # n='sfyh'
# # # # # print (type(n)       )
# # # # # print (5)

# # # # # # print (5)
# # # # # # print (5)
# # # # # print (5)

# # # # # a= 5.89
# # # # # b=5
# # # # # c='sfsg'
# # # # # print (f"{a} - {b} - {c}")
# # # # a = int(input('Введите первое число:'))
# # # # b = int(input('Введите второе число:'))
# # # # c = int(input('Введите третье число:'))
# # # # # print("{} - {} - {}".format(a,b,c))
# # # # print( a, '+', b, '+', c, '=', a+b+c)
# # # # # a = 5.89
# # # # # c = float (a)
# # # # # print (c)

# # # a=2.345456776
# # # b=45.6676779
# # # print(round(a*b,4))

# # # a = 'qwerty'
# # # for i in a:
# # #     print(i)

# # # line = ""
# # # for i in range(5):
# # #     line = ""
# # #     for j in range(5):
# # #         line += "*"
# # #     print(line)

# # # a = 700
# # # b = 2100

# # # if b % a > 0:
# # #     print('Машина проедет это расстояние за:', (b // a) + 1, 'дн')
# # # else:
# # #     print('Машина проедет это расстояние за:', b // a, 'дн')


# # # def power_rec(a,b):
# # #     if b == 0:
# # #         return 1
# # #     return a * power_rec(a, b - 1)



# # # print(power_rec(3, 5))

# # # sp = [1,8,7,6,10,11,14]

# # # # squares = [i**2 for i in sp]
# # # # print(squares)
# # # print( [i**2 for i in sp if i % 2 != 0] )
# # # print([i**2 if i % 2 != 0 else 0 for i in sp ])

# # # Задача №39. Решение в группах Даны два массива чисел. 
# # # Требуется вывести те элементы первого массива (в том порядке, в каком они идут в первом массиве), 
# # # которых нет во втором массиве. Пользователь вводит  число N - количество элементов в первом массиве, 
# # # затем N чисел - элементы массива. Затем число M - количество элементов во втором массиве. 
# # # Затем элементы второго массива 
# # # # Ввод: Вывод: 7 3 3 2 12 3 1 3 4 2 4 12 6 4 15 43 1 15 1

# # # sp1 = [3, 1, 3, 4, 2, 4, 12]
# # # sp2 = [4, 15, 43, 1, 15, 1]

# # # # print([i for i in sp1 if i not in sp2])
# # # print([i for i in sp1 if i not in set(sp2)])

# # # Задача №41. Решение в группах Дан массив, состоящий из целых чисел. Напишите программу, 
# # # которая в данном массиве определит количество элементов, у которых два соседних и, при этом, 
# # # оба соседних элемента меньше данного. Сначала вводится число N — количество элементов в массиве  
# # # Далее записаны N чисел — элементы массива. Массив состоит из целых чисел. 

# # # def find_champ(sp, index):
# # #     if sp[index] > sp[index+1] and sp[index] > sp[index-1]:
# # #         return True
# # #     return False

# # # def find_champ2(sp, index):
# # #     if sp[index] > sp[(index+1) % len(sp)] and sp[index] > sp[index-1]:
# # #         return True
# # #     return False




# # # sp1 = [1,2,3,4,5]  # 0

# # # print(sum([1 for i in range(len(sp1)-1) if find_champ(sp1,i) ]))

# # # sp1 = [1,5,1,5,1] # 2

# # # print(sum([1 for i in range(len(sp1)-1) if find_champ(sp1,i)  ]))

# # # #закольцовываем список 

# # # sp1 = [1,2,3,4,5]  # 1

# # # print(sum([1 for i in range(len(sp1)) if find_champ2(sp1,i) ]))
    
# # # Задача №45. Решение в группах Два различных натуральных числа n и m называются дружественными, 
# # # если сумма делителей числа n 
# # # (включая 1, но исключая само n) равна числу m и наоборот. Например, 220 и 284 –
# # # дружественные числа. По данному числу k выведите все пары дружественных чисел, 
# # # каждое из которых не превосходит k. Программа получает на вход одно натуральное число k,
# # # не превосходящее 105. Программа должна вывести  все пары дружественных чисел,
# # # каждое из которых не превосходит k. Пары необходимо выводить по одной в строке, 
# # # разделяя пробелами. Каждая пара должна быть выведена только один раз
# # # (перестановка чисел новую пару не дает). Ввод: Вывод: 300 220 284


# # # Задача №3. Общее обсуждение
# # # В некоторой школе решили набрать три новых
# # # математических класса и оборудовать кабинеты для
# # # них новыми партами. За каждой партой может сидеть
# # # два учащихся. Известно количество учащихся в
# # # каждом из трех классов. Выведите наименьшее
# # # число парт, которое нужно приобрести для них.
# # # Input: 20 21 22(ввод чисел НЕ в одну строку)
# # # Output: 32

# # a = input('Введите число учеников в классе 1: ')
# # b = input('Введите число учеников в классе 2: ')
# # c = input('Введите число учеников в классе 3: ')

# # # Преобразуйте введенные значения в целые числа
# # a = int(a)
# # b = int(b)
# # c = int(c)

# # # Используйте скобки вокруг оператора сложения
# # # print('Минимальное число парт =', round((a + b + c) / 2,0))

# # year = int(input('Введите год:'))

# # if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
# #     print(f'{year} - високосный')
# # else:
# #     print(f'{year} - не високосный')
# # print (*range(5))
# print (*range(1,8,2))
# # print (*range(4,-1,-1))

# # from numpy import arange
# # print (arange(1.5, 56.897, 0.5))

# # n = int(input('Введите число для нахождения факториала: '))
# # result = 1

# # for i in range(1, n + 1):
# #     result *= i

# # print(f'Факториал числа {n} равен {result}')

# n = int(input("Введите число: ")) # решение с помощью цикла While
# # i = 2
# # result = 1
# # while i <= n:
# # result = result * i
# # i = i + 1
# # print(result)

from functools import reduce

# Пример: нахождение суммы элементов списка
numbers = [1, 2, 3, 4, 5]
sum_result = reduce(lambda x, y: x + y, numbers)
print(sum_result))
